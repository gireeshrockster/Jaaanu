NAME:G.V.AKASH NAIDU
ROLL NO:2273A05181
SECTION:MAC

PROGRAM:Write a c program for prims

#include <limits.h>
#include <stdbool.h>
#include <stdio.h>
#define V 5
int minKey(int key[], bool mstSet[])
{
    int min = INT_MAX, min_index,v;
    for ( v = 0; v < V; v++)
        if (mstSet[v] == false && key[v] < min)
            min = key[v], min_index = v;
    return min_index;
}
int printMST(int parent[], int graph[V][V])
{
	int i,sum;
    printf("Edge \tWeight\n");
    for ( i = 1; i < V; i++){
        printf("%d - %d \t%d \n", parent[i], i, graph[i][parent[i]]);
        sum=sum+graph[i][parent[i]];
}
printf("minimum spanning tree %d",sum);
}
void primMST(int graph[V][V])
{
    int parent[V];
    int key[V],i,count,v;
    bool mstSet[V];
    for (i = 0; i < V; i++)
        key[i] = INT_MAX, mstSet[i] = false;
    key[0] = 0;
    parent[0] = -1;
    for (count = 0; count < V - 1; count++) {
        int u = minKey(key, mstSet);
        mstSet[u] = true;
        for (v = 0; v < V; v++)
            if (graph[u][v] && mstSet[v] == false
                && graph[u][v] < key[v])
                parent[v] = u, key[v] = graph[u][v];
    }
    printMST(parent, graph);
}
int main()
{
    int graph[V][V] = { { 0, 3,6,2 },
                        { 3,0,5,0 },
                        { 6,5,0,4 },
                        { 2,0,4,0 } };

    primMST(graph);
return 0;
}

OUTPUT:

Edge 	Weight
0 - 1 	3 
3 - 2 	4 
0 - 3 	2 
0 - 4 	0 
minimum spanning tree 11